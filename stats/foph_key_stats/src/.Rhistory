y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly_inst
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- ggplot(subgroup_year_summary, aes( group = subgroup)) +
geom_point(data = df_federal_sepsis, aes(x = year, y = cases), color = "steelblue", alpha = 0.1,
position = position_jitter(width = 0.3, height = 0)) +
# scale_fill_viridis_c(option = "C")
geom_line(aes(x = year, y = total_cases), color = "black", linetype = "solid", size = 1) +
# geom_line(aes(x = year, y = min_cases), color = "black", linetype = "dashed", size = 1) +
# geom_line(aes(x = year, y = max_cases), color = "black", linetype = "dashed", size = 1) +
# Add error bars for standard deviation
geom_errorbar(aes(x = year, ymin = total_cases - sd_cases, ymax = total_cases + sd_cases), width = 0.2, color = "black") +
geom_text(aes(x= year, y=  (avg_cases + sd_cases)*1.5, label = round(avg_cases))) +
# Additional plot aesthetics and labels
labs(
title = "Federal-level yearly cases of sepsis (J.2)\nper institution.",
x = "Year",
y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <-
ggplot(df, aes(x = factor(year), y = cases, fill = factor(year))) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
subgroup_year_summary
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(df, aes(x = factor(year), y = cases, fill = factor(year))) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot( aes(x = factor(year), y = cases, fill = factor(year))) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
subgroup_year_summary
# Create the plot using subgroup_year_summary data
p_yearly <- df_federal_sepsis |>
ggplot( aes(x = factor(year), y = tcases, fill = factor(year))) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- df_federal_sepsis |>
ggplot( aes(x = factor(year), y = cases, fill = factor(year))) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- df_federal_sepsis |>
ggplot( aes(x = factor(year), y = cases)) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", size = 1.5) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- df_federal_sepsis |>
ggplot( aes(x = factor(year), y = cases)) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.1, color = "black", alpha = 0.2) +
labs(title = "Case Distribution with Individual Data Points",
x = "Year", y = "Cases per Institution") +
theme_minimal()
# Print the plot
p_yearly
# Print the plot
p_yearly_inst
# Create the plot using subgroup_year_summary data
p_yearly_inst <- ggplot(subgroup_year_summary, aes( group = subgroup)) +
geom_point(data = df_federal_sepsis, aes(x = year, y = cases), color = "steelblue", alpha = 0.1,
position = position_jitter(width = 0.3, height = 0)) +
# scale_fill_viridis_c(option = "C")
geom_line(aes(x = year, y = avg_cases), color = "black", linetype = "solid", size = 1) +
geom_line(aes(x = year, y = min_cases), color = "black", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = max_cases), color = "black", linetype = "dashed", size = 1) +
# Add error bars for standard deviation
geom_errorbar(aes(x = year, ymin = avg_cases - sd_cases, ymax = avg_cases + sd_cases), width = 0.2, color = "black") +
geom_text(aes(x= year, y=  (avg_cases + sd_cases)*1.5, label = round(avg_cases))) +
# Additional plot aesthetics and labels
labs(
title = "Federal-level yearly cases of sepsis (J.2)\nper institution.",
x = "Year",
y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly_inst
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
geom_col(fill = "steelblue") +  # or geom_bar(stat = "identity")
geom_errorbar(aes(ymin = total_cases - sd_cases, ymax = total_cases + sd_cases),
width = 0.2, color = "red") +
labs(title = "Total Cases per Year with Variability",
x = "Year", y = "Total Cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
geom_col(fill = "steelblue") +  # or geom_bar(stat = "identity")
geom_errorbar(aes(ymin = total_cases - sd_cases, ymax = total_cases + sd_cases),
width = 0.2, color = "red") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
geom_col(fill = "steelblue") +  # or geom_bar(stat = "identity")
geom_errorbar(aes(ymin = total_cases - sd_cases, ymax = total_cases + sd_cases),
width = 0.2, color = "black") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly_inst <- ggplot(subgroup_year_summary, aes( group = subgroup)) +
geom_point(data = df_federal_sepsis, aes(x = year, y = cases), color = "steelblue", alpha = 0.1,
position = position_jitter(width = 0.3, height = 0)) +
# scale_fill_viridis_c(option = "C")
geom_line(aes(x = year, y = avg_cases), color = "black", linetype = "solid", size = 1) +
geom_line(aes(x = year, y = min_cases), color = "black", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = max_cases), color = "black", linetype = "dashed", size = 1) +
# Add error bars for standard deviation
geom_errorbar(aes(x = year, ymin = avg_cases - sd_cases, ymax = avg_cases + sd_cases), width = 0.2, color = "black") +
geom_text(aes(x= year, y=  (avg_cases + sd_cases)*1.5, label = round(avg_cases))) +
# Additional plot aesthetics and labels
labs(
title = "Federal-level yearly cases of sepsis (J.2)\nper institution.",
x = "Year",
y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly_inst
overall_sd <- sd(subgroup_year_summary$total_cases, na.rm = TRUE)
# Create the plot
p_yearly <- subgroup_year_summary %>%
ggplot(aes(x = year, y = total_cases)) +
geom_col(fill = "steelblue") +
geom_errorbar(aes(ymin = total_cases - overall_sd, ymax = total_cases + overall_sd),
width = 0.2, color = "black") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nSum Total with Overall Variability",
x = "Year", y = "Total cases") +
theme_minimal()
p_yearly
# Create the plot
p_yearly <- subgroup_year_summary %>%
ggplot(aes(x = year, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nSum Total with Overall Variability",
x = "Year", y = "Total cases") +
theme_minimal()
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
# geom_col(fill = "steelblue") +  # or
geom_bar(stat = "identity") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
# geom_col(fill = "steelblue") +  # or
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
# geom_col(fill = "steelblue") +  # or
geom_bar(stat = "identity", fill = "steelblue", color = "black") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
p_yearly + p_yearly_inst
# Step 2: Calculate the grand total of all cases
grand_total <- subgroup_year_summary %>%
summarise(grand_total_cases = sum(total_cases))
grand_total
subgroup_year_summary
subgroup_year_summary |> filter(year = 2022)
subgroup_year_summary |> filter(year == 2022)
subgroup_year_summary |> filter(year == 2022)
subgroup_year_summary |> filter(year == 2022)
annotation_example <- subgroup_year_summary |> filter(year == 2022)
annotation_example
annotation_example$year
annotation_example$total_cases
annotation_example$avg_cases
annotation_example$sd_cases
annotation_example$min_cases
annotation_example$max_cases
annotation_example$avg_cases |> round()
annotation_example$max_cases
annotation_example <- subgroup_year_summary |> filter(year == 2022)
annotation_example$year
annotation_example$total_cases
annotation_example$avg_cases |> round()
annotation_example$sd_cases|> round()
annotation_example$min_cases
annotation_example$max_cases
annotation_example
anno_year <- "\nYear:"
anno_total_cases <- "Total cases"
anno_avg_cases <- "avg_cases"
anno_sd_cases <- "S.D."
anno_min_cases <- "min"
anno_max_cases <- "max"
# Extract and prepare the values
anno_year <- paste0("For year: ", annotation_example$year)
anno_total_cases <- paste0("\nTotal cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0(" Avg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(" S.D.: ", round(annotation_example$sd_cases))
anno_min_cases <- paste0(" Min: ", annotation_example$min_cases)
anno_max_cases <- paste0(" Max: ", annotation_example$max_cases)
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_cases,
anno_max_cases
)
# Display the annotation text
print(annotation_text)
anno_min_max <- paste0(" Min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases)
annotation_example <- subgroup_year_summary |> filter(year == 2022)
anno_min_max <- paste0(" Min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases)
anno_grand_total <-
paste0("\nTotal 2010-2022: ", grand_total)
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max,
anno_grand_total
)
# Display the annotation text
print(annotation_text)
patch <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch
anno_min_max <- paste0(", in-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
# Extract and prepare the values
anno_year <- paste0("For example year: ", annotation_example$year)
anno_total_cases <- paste0("total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0("\nAvg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (S.D.: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", in-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max,
)
# Display the annotation text
print(annotation_text)
annotation_example <- subgroup_year_summary |> filter(year == 2022)
# Extract and prepare the values
anno_year <- paste0("For example year: ", annotation_example$year)
anno_total_cases <- paste0("total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0("\nAvg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (S.D.: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", in-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
# Display the annotation text
print(annotation_text)
# Output the summaries to check
print(subgroup_summary)
print(subgroup_year_summary)
print(grand_total)
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly_inst <- ggplot(subgroup_year_summary, aes( group = subgroup)) +
geom_point(data = df_federal_sepsis, aes(x = year, y = cases), color = "steelblue", alpha = 0.1,
position = position_jitter(width = 0.3, height = 0)) +
# scale_fill_viridis_c(option = "C")
geom_line(aes(x = year, y = avg_cases), color = "black", linetype = "solid", size = 1) +
geom_line(aes(x = year, y = min_cases), color = "black", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = max_cases), color = "black", linetype = "dashed", size = 1) +
# Add error bars for standard deviation
geom_errorbar(aes(x = year, ymin = avg_cases - sd_cases, ymax = avg_cases + sd_cases), width = 0.2, color = "black") +
geom_text(aes(x= year, y=  (avg_cases + sd_cases)*1.5, label = round(avg_cases))) +
# Additional plot aesthetics and labels
labs(
title = "Federal-level yearly cases of sepsis (J.2)\nper institution.",
x = "Year",
y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly_inst
patch <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch
# Extract and prepare the values
anno_year <- paste0("For example year: ", annotation_example$year)
anno_total_cases <- paste0(", total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0(", avg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (sd: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
# Display the annotation text
print(annotation_text)
# Output the summaries to check
print(subgroup_summary)
print(subgroup_year_summary)
print(grand_total)
# Create the plot using subgroup_year_summary data
p_yearly <- subgroup_year_summary |>
ggplot(aes(x = year, y = total_cases)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black") +
labs(title = "Federal-level yearly cases of sepsis (J.2)\nsum total.",
x = "Year", y = "Total cases") +
theme_minimal()
# Print the plot
p_yearly
# Create the plot using subgroup_year_summary data
p_yearly_inst <- ggplot(subgroup_year_summary, aes( group = subgroup)) +
geom_point(data = df_federal_sepsis, aes(x = year, y = cases), color = "steelblue", alpha = 0.1,
position = position_jitter(width = 0.3, height = 0)) +
# scale_fill_viridis_c(option = "C")
geom_line(aes(x = year, y = avg_cases), color = "black", linetype = "solid", size = 1) +
geom_line(aes(x = year, y = min_cases), color = "black", linetype = "dashed", size = 1) +
geom_line(aes(x = year, y = max_cases), color = "black", linetype = "dashed", size = 1) +
# Add error bars for standard deviation
geom_errorbar(aes(x = year, ymin = avg_cases - sd_cases, ymax = avg_cases + sd_cases), width = 0.2, color = "black") +
geom_text(aes(x= year, y=  (avg_cases + sd_cases)*1.5, label = round(avg_cases))) +
# Additional plot aesthetics and labels
labs(
title = "Federal-level yearly cases of sepsis (J.2)\nper institution.",
x = "Year",
y = "Number of cases",
color = "Case Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
p_yearly_inst
patch_tally <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch_tally
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 7)
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 5)
# Extract and prepare the values
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
anno_year <- paste0("\nFor example year: ", annotation_example$year)
anno_total_cases <- paste0(", total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0(", avg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (sd: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
# Display the annotation text
print(annotation_text)
patch_tally <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch_tally
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 5)
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 5)
anno_avg_cases <- paste0(".\n Per institution, avg. cases: ", round(annotation_example$avg_cases))
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
ract and prepare the values
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
anno_year <- paste0("\nFor example year: ", annotation_example$year)
anno_total_cases <- paste0(", total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0(".\n Per institution, avg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (sd: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
# Display the annotation text
print(annotation_text)
patch_tally <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
patch_tally
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 8, height = 5)
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 4.5)
# Extract and prepare the values
anno_grand_total <-
paste0("\nTotal cases for 2010-2022: ", grand_total)
anno_year <- paste0("\n\nFor example year: ", annotation_example$year)
anno_total_cases <- paste0(", total cases: ", annotation_example$total_cases)
anno_avg_cases <- paste0(",\n per institution avg. cases: ", round(annotation_example$avg_cases))
anno_sd_cases <- paste0(", (sd: ", round(annotation_example$sd_cases))
anno_min_max <- paste0(", min-max: ", annotation_example$min_cases, "-", annotation_example$max_cases, ")")
# Combine all pieces into one annotation string
annotation_text <- paste0(
anno_grand_total,
anno_year,
anno_total_cases,
anno_avg_cases,
anno_sd_cases,
anno_min_max
)
patch_tally <- p_yearly + p_yearly_inst + labs(caption = annotation_text)
ggsave("../output/p_patch_tally_main.png", plot = patch_tally, width = 10, height = 4.5)
